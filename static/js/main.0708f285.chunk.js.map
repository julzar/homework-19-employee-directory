{"version":3,"sources":["slices/employees.js","components/Employee.js","components/Search.js","pages/EmployeesPage.js","App.js","slices/index.js","index.js"],"names":["employeesSlice","createSlice","name","initialState","loading","hasErrors","filteredBy","employees","reducers","getEmployees","state","getEmployeesSuccess","payload","results","getEmployeesFailure","getEmployeesFiltered","actions","employeesSelector","Employee","employee","first","last","phone","email","Search","dispatch","useDispatch","Form","inline","onSubmit","event","preventDefault","document","getElementById","value","trim","className","FormControl","type","placeholder","id","Button","variant","EmployeesPage","useSelector","useEffect","a","fetch","response","json","data","Table","striped","bordered","hover","filter","map","i","key","App","exact","path","component","rootReducer","combineReducers","employeesReducer","store","configureStore","reducer","render"],"mappings":"oOASMA,EAAiBC,YAAY,CACjCC,KAAM,YACNC,aAT0B,CAC1BC,SAAS,EACTC,WAAW,EACXC,YAAY,EACZC,UAAW,IAMXC,SAAU,CACRC,aAAc,SAAAC,GACZA,EAAMN,SAAU,GAElBO,oBAAqB,SAACD,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAC7BF,EAAMH,UAAYK,EAAQC,QAC1BH,EAAMN,SAAU,EAChBM,EAAML,WAAY,GAEpBS,oBAAqB,SAAAJ,GACnBA,EAAMN,SAAU,EAChBM,EAAML,WAAY,GAEpBU,qBAAsB,SAACL,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAC9BF,EAAMJ,WAAaM,M,EAKsEZ,EAAegB,QAA/FP,E,EAAAA,aAAcE,E,EAAAA,oBAAqBG,E,EAAAA,oBAAqBC,E,EAAAA,qBAC1DE,EAAoB,SAAAP,GAAK,OAAIA,EAAMH,WAEjCP,IAAf,QC/BO,IAAMkB,EAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAiB,OACxC,4BACE,4BACGA,EAASjB,KAAKkB,OAEjB,4BACGD,EAASjB,KAAKmB,MAEjB,4BACGF,EAASG,OAEZ,4BACGH,EAASI,S,wBCWHC,EAhBA,WACb,IAAMC,EAAWC,cAOjB,OACA,kBAACC,EAAA,EAAD,CAAMC,QAAM,EAACC,SANS,SAACC,GACrBA,EAAMC,iBACNN,EAAUV,EAAqBiB,SAASC,eAAe,UAAUC,MAAMC,UAInCC,UAAU,QAC5C,kBAACC,EAAA,EAAD,CAAaC,KAAK,OAAOC,YAAY,SAASH,UAAU,UAAUI,GAAG,SAAStC,KAAK,WACnF,kBAACuC,EAAA,EAAD,CAAQH,KAAK,SAASI,QAAQ,mBAA9B,Y,QC0BSC,EArCO,WACpB,IAAMlB,EAAWC,cADS,EAE2BkB,YAAY3B,GAAzDV,EAFkB,EAElBA,UAAWH,EAFO,EAEPA,QAASC,EAFF,EAEEA,UAAWC,EAFb,EAEaA,WAEvCuC,qBAAU,WACRpB,EHsBF,uCAAO,WAAMA,GAAN,iBAAAqB,EAAA,6DACLrB,EAAShB,KADJ,kBAIoBsC,MAAM,iDAJ1B,cAIGC,EAJH,gBAKgBA,EAASC,OALzB,OAKGC,EALH,OAOHzB,EAASd,EAAoBuC,IAP1B,kDASHzB,EAASX,KATN,0DAAP,yDGrBG,CAACW,IAaJ,OACE,6BACA,kBAAC,EAAD,MACA,kBAAC0B,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,+BACA,4BACE,0CACA,yCACA,qCACA,uCAnBAlD,EAAgB,mDAChBC,EAAkB,2DAElBC,EAAmBC,EAAUgD,QAC9B,SAAApC,GAAQ,OAAIA,EAASjB,KAAKkB,QAAUd,GAAca,EAASjB,KAAKmB,OAASf,KACzEkD,KAAI,SAACrC,EAAUsC,GAAX,OAAiB,kBAAC,EAAD,CAAUC,IAAKD,EAAGtC,SAAUA,OAE7CZ,EAAUiD,KAAI,SAACrC,EAAUsC,GAAX,OAAiB,kBAAC,EAAD,CAAUC,IAAKD,EAAGtC,SAAUA,UCVvDwC,EARH,WACV,OACE,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnB,M,OCH1BoB,EAJKC,YAAgB,CAClCzD,UAAW0D,ICMPC,G,MAAQC,YAAe,CAAEC,QAASL,KAExCM,iBACE,kBAAC,IAAD,CAAUH,MAAOA,GACf,kBAAC,EAAD,OAEFlC,SAASC,eAAe,W","file":"static/js/main.0708f285.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const initialState = {\r\n  loading: false,\r\n  hasErrors: false,\r\n  filteredBy: false,\r\n  employees: [],\r\n}\r\n\r\nconst employeesSlice = createSlice({\r\n  name: 'employees',\r\n  initialState,\r\n  reducers: {\r\n    getEmployees: state => {\r\n      state.loading = true\r\n    },\r\n    getEmployeesSuccess: (state, { payload }) => {\r\n      state.employees = payload.results\r\n      state.loading = false\r\n      state.hasErrors = false\r\n    },\r\n    getEmployeesFailure: state => {\r\n      state.loading = false\r\n      state.hasErrors = true\r\n    },\r\n    getEmployeesFiltered: (state, { payload }) => {\r\n      state.filteredBy = payload\r\n    }\r\n  },\r\n})\r\n\r\nexport const { getEmployees, getEmployeesSuccess, getEmployeesFailure, getEmployeesFiltered} = employeesSlice.actions\r\nexport const employeesSelector = state => state.employees\r\nexport const filteredSelector = state => state.filteredBy\r\nexport default employeesSlice.reducer\r\n\r\nexport function fetchEmployees() {\r\n  return async dispatch => {\r\n    dispatch(getEmployees())\r\n\r\n    try {\r\n      const response = await fetch('https://randomuser.me/api/?results=200&nat=us')\r\n      const data = await response.json()\r\n\r\n      dispatch(getEmployeesSuccess(data))\r\n    } catch (error) {\r\n      dispatch(getEmployeesFailure())\r\n    }\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\n\r\n\r\nexport const Employee = ({ employee }) => { return (\r\n    <tr>\r\n      <td>\r\n        {employee.name.first}\r\n      </td>\r\n      <td>\r\n        {employee.name.last}\r\n      </td>\r\n      <td>\r\n        {employee.phone}\r\n      </td>\r\n      <td>\r\n        {employee.email}\r\n      </td>\r\n    </tr>\r\n)}","import React from 'react'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { getEmployeesFiltered } from '../slices/employees'\r\n\r\nconst Search = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault()\r\n    dispatch( getEmployeesFiltered(document.getElementById('search').value.trim() ) )\r\n  }\r\n\r\n  return (\r\n  <Form inline onSubmit={submitHandler} className=\"mb-2\">\r\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" id='search' name='search' />\r\n      <Button type='submit' variant=\"outline-success\">Search</Button>\r\n  </Form>\r\n  )\r\n}\r\n\r\nexport default Search","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { fetchEmployees, employeesSelector } from '../slices/employees'\r\n\r\nimport { Employee } from '../components/Employee'\r\nimport  Search  from '../components/Search'\r\n\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nconst EmployeesPage = () => {\r\n  const dispatch = useDispatch()\r\n  const { employees, loading, hasErrors, filteredBy} = useSelector(employeesSelector)\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchEmployees())\r\n  }, [dispatch])\r\n\r\n  const renderEmployees = () => {\r\n    if (loading) return <p>Loading employees...</p>\r\n    if (hasErrors) return <p>Unable to display employees.</p>\r\n\r\n    if (filteredBy) return employees.filter(\r\n       employee => employee.name.first === filteredBy || employee.name.last === filteredBy)\r\n      .map((employee, i) => <Employee key={i} employee={employee} />)\r\n    \r\n    return employees.map((employee, i) => <Employee key={i} employee={employee} />)\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n    <Search></Search>\r\n    <Table striped bordered hover>\r\n      <thead>\r\n      <tr>\r\n        <th>First Name</th>\r\n        <th>Last Name</th>\r\n        <th>Phone</th>\r\n        <th>Email</th>\r\n      </tr>\r\n      </thead>\r\n      {renderEmployees()}\r\n    </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EmployeesPage\r\n","import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n} from 'react-router-dom'\r\n\r\nimport EmployeesPage from './pages/EmployeesPage'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n        <Route exact path=\"/\" component={EmployeesPage} />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { combineReducers } from 'redux'\r\n\r\nimport employeesReducer from './employees'\r\n\r\nconst rootReducer = combineReducers({\r\n  employees: employeesReducer,\r\n})\r\n\r\nexport default rootReducer\r\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport App from './App'\r\nimport rootReducer from './slices'\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst store = configureStore({ reducer: rootReducer })\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}